#!/usr/bin/env python

#
#            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#                    Version 2, December 2004
#
# Copyright (C) 2016-17 Anton Karazeev <anton.karazeev@gmail.com>
#
# Everyone is permitted to copy and distribute verbatim or modified
# copies of this license document, and changing it is allowed as long
# as the name is changed.
#
#            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
#
#  0. You just DO WHAT THE FUCK YOU WANT TO.
#

# !! Be careful with names of .ipynb files !!

# Usage: ipy2pdf notebook.ipynb
# Output: notebook.pdf

import os
import sys
import shutil

try:
    inp = sys.argv[1]  # input path to .ipynb
    inp = os.path.realpath(inp)
except Exception as e:
    print('> Usage: ipy2pdf notebook.ipynb')
    exit()

if not inp.endswith('.ipynb'):  # check #1
    print("> Extension of file should be .ipynb")
    exit()

if not os.path.exists(inp):  # check #2
    print("> File doesn't exist... kek")
    exit()

folder_path = os.path.dirname(inp)  # get path to folder of the file
ipynb_name = os.path.basename(inp)  # get name of the file

name = ipynb_name[:-5]  # with '.' at the end
tex_name = name + "tex"  # make a filename for .tex file
tmp_tex_name = "~$" + tex_name  # and for tmp file too

# execute command to generate .tex file
os.system("jupyter nbconvert {} --to latex".format(os.path.join(folder_path,
                                                                ipynb_name)))

pttrn = "\\usepackage{mathpazo}"
# goal: to insert line ins after pttrn in .tex file
ins = "    \\usepackage[T2A]{fontenc}\n"

with open(os.path.join(folder_path, tex_name), "r") as file_old, \
     open(os.path.join(folder_path, tmp_tex_name), "w") as file_new:
    is_inserted = False  # whether line ins is inserted in file_new
    for line in file_old:
        file_new.write(line)
        if not is_inserted and (pttrn in line):
            is_inserted = True
            file_new.write(ins)

# remove old .tex file and rename the old one
os.remove(os.path.join(folder_path, tex_name))
os.rename(os.path.join(folder_path, tmp_tex_name),
          os.path.join(folder_path, tex_name))

# execute command to get .pdf from tex_name
os.system("pdflatex -interaction=nonstopmode -output-directory={} {} > \
          /dev/null".format(folder_path, os.path.join(folder_path, tex_name)))

TO_DEL = ['aux', 'log', 'out', 'tex']

for ext in TO_DEL:
    try:
        os.remove(os.path.join(folder_path, name + ext))
    except Exception as e:
        print('-> Not found: ', os.path.join(folder_path, name + ext))

print('Done')
